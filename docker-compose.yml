version: '3.8'

services:
  # PostgreSQL database for staging/production-like development
  postgres:
    image: postgres:15-alpine
    container_name: agentfarm_postgres
    environment:
      POSTGRES_DB: agentfarm_simulations
      POSTGRES_USER: agentfarm
      POSTGRES_PASSWORD: devpassword
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agentfarm"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agentfarm_network

  # Redis cache for distributed caching
  redis:
    image: redis:7-alpine
    container_name: agentfarm_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agentfarm_network

  # Redis Commander - Web UI for Redis (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: agentfarm_redis_commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - agentfarm_network
    profiles:
      - tools

  # PgAdmin - Web UI for PostgreSQL (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: agentfarm_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@agentfarm.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - agentfarm_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  agentfarm_network:
    driver: bridge
